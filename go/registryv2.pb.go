// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.0
// source: registryv2.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorStatusV2 int32

const (
	// Attempting to update a node that is not registered.
	ErrorStatusV2_NOT_REGISTERED ErrorStatusV2 = 0
	// Attempting to register a node that is already in the registry.
	ErrorStatusV2_ALREADY_REGISTERED ErrorStatusV2 = 1
	ErrorStatusV2_INVALID_MEMBER     ErrorStatusV2 = 2
	// Resuorce not found.
	ErrorStatusV2_NOT_FOUND ErrorStatusV2 = 3
	// Unknown error.
	ErrorStatusV2_UNKNOWN ErrorStatusV2 = 4
)

// Enum value maps for ErrorStatusV2.
var (
	ErrorStatusV2_name = map[int32]string{
		0: "NOT_REGISTERED",
		1: "ALREADY_REGISTERED",
		2: "INVALID_MEMBER",
		3: "NOT_FOUND",
		4: "UNKNOWN",
	}
	ErrorStatusV2_value = map[string]int32{
		"NOT_REGISTERED":     0,
		"ALREADY_REGISTERED": 1,
		"INVALID_MEMBER":     2,
		"NOT_FOUND":          3,
		"UNKNOWN":            4,
	}
)

func (x ErrorStatusV2) Enum() *ErrorStatusV2 {
	p := new(ErrorStatusV2)
	*p = x
	return p
}

func (x ErrorStatusV2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorStatusV2) Descriptor() protoreflect.EnumDescriptor {
	return file_registryv2_proto_enumTypes[0].Descriptor()
}

func (ErrorStatusV2) Type() protoreflect.EnumType {
	return &file_registryv2_proto_enumTypes[0]
}

func (x ErrorStatusV2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorStatusV2.Descriptor instead.
func (ErrorStatusV2) EnumDescriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{0}
}

type MemberStatus int32

const (
	MemberStatus_UP   MemberStatus = 0
	MemberStatus_DOWN MemberStatus = 1
)

// Enum value maps for MemberStatus.
var (
	MemberStatus_name = map[int32]string{
		0: "UP",
		1: "DOWN",
	}
	MemberStatus_value = map[string]int32{
		"UP":   0,
		"DOWN": 1,
	}
)

func (x MemberStatus) Enum() *MemberStatus {
	p := new(MemberStatus)
	*p = x
	return p
}

func (x MemberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_registryv2_proto_enumTypes[1].Descriptor()
}

func (MemberStatus) Type() protoreflect.EnumType {
	return &file_registryv2_proto_enumTypes[1]
}

func (x MemberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberStatus.Descriptor instead.
func (MemberStatus) EnumDescriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{1}
}

type MemberUpdateType int32

const (
	MemberUpdateType_REGISTER   MemberUpdateType = 0
	MemberUpdateType_UNREGISTER MemberUpdateType = 1
	MemberUpdateType_STATE      MemberUpdateType = 2
)

// Enum value maps for MemberUpdateType.
var (
	MemberUpdateType_name = map[int32]string{
		0: "REGISTER",
		1: "UNREGISTER",
		2: "STATE",
	}
	MemberUpdateType_value = map[string]int32{
		"REGISTER":   0,
		"UNREGISTER": 1,
		"STATE":      2,
	}
)

func (x MemberUpdateType) Enum() *MemberUpdateType {
	p := new(MemberUpdateType)
	*p = x
	return p
}

func (x MemberUpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberUpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_registryv2_proto_enumTypes[2].Descriptor()
}

func (MemberUpdateType) Type() protoreflect.EnumType {
	return &file_registryv2_proto_enumTypes[2]
}

func (x MemberUpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberUpdateType.Descriptor instead.
func (MemberUpdateType) EnumDescriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{2}
}

type ErrorV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      ErrorStatusV2 `protobuf:"varint,1,opt,name=status,proto3,enum=registryv2.ErrorStatusV2" json:"status,omitempty"`
	Description string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ErrorV2) Reset() {
	*x = ErrorV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorV2) ProtoMessage() {}

func (x *ErrorV2) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorV2.ProtoReflect.Descriptor instead.
func (*ErrorV2) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorV2) GetStatus() ErrorStatusV2 {
	if x != nil {
		return x.Status
	}
	return ErrorStatusV2_NOT_REGISTERED
}

func (x *ErrorV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the node.
	Id       string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId string       `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Status   MemberStatus `protobuf:"varint,3,opt,name=status,proto3,enum=registryv2.MemberStatus" json:"status,omitempty"`
	Version  uint64       `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	// Service is the type of service running on the node.
	Service string `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	// ity is the location of the node in the cluster.
	Locality string `protobuf:"bytes,6,opt,name=locality,proto3" json:"locality,omitempty"`
	// Created is the time the node was created in UNIX milliseconds.
	Created int64 `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty"`
	// Revision identifies the version of the service running on the node.
	Revision string            `protobuf:"bytes,8,opt,name=revision,proto3" json:"revision,omitempty"`
	Metadata map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{1}
}

func (x *Member) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Member) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Member) GetStatus() MemberStatus {
	if x != nil {
		return x.Status
	}
	return MemberStatus_UP
}

func (x *Member) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Member) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Member) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *Member) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Member) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *Member) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type RegisterMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *RegisterMemberRequest) Reset() {
	*x = RegisterMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberRequest) ProtoMessage() {}

func (x *RegisterMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberRequest.ProtoReflect.Descriptor instead.
func (*RegisterMemberRequest) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterMemberRequest) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type RegisterMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorV2 `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *RegisterMemberResponse) Reset() {
	*x = RegisterMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterMemberResponse) ProtoMessage() {}

func (x *RegisterMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterMemberResponse.ProtoReflect.Descriptor instead.
func (*RegisterMemberResponse) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterMemberResponse) GetError() *ErrorV2 {
	if x != nil {
		return x.Error
	}
	return nil
}

type UnregisterMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnregisterMemberRequest) Reset() {
	*x = UnregisterMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMemberRequest) ProtoMessage() {}

func (x *UnregisterMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMemberRequest.ProtoReflect.Descriptor instead.
func (*UnregisterMemberRequest) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{4}
}

func (x *UnregisterMemberRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnregisterMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorV2 `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *UnregisterMemberResponse) Reset() {
	*x = UnregisterMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterMemberResponse) ProtoMessage() {}

func (x *UnregisterMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterMemberResponse.ProtoReflect.Descriptor instead.
func (*UnregisterMemberResponse) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{5}
}

func (x *UnregisterMemberResponse) GetError() *ErrorV2 {
	if x != nil {
		return x.Error
	}
	return nil
}

type UpdateMemberMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateMemberMetadataRequest) Reset() {
	*x = UpdateMemberMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberMetadataRequest) ProtoMessage() {}

func (x *UpdateMemberMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateMemberMetadataRequest) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMemberMetadataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMemberMetadataRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateMemberMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorV2 `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *UpdateMemberMetadataResponse) Reset() {
	*x = UpdateMemberMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMemberMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberMetadataResponse) ProtoMessage() {}

func (x *UpdateMemberMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateMemberMetadataResponse) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateMemberMetadataResponse) GetError() *ErrorV2 {
	if x != nil {
		return x.Error
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions map[string]uint64 `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeRequest) GetVersions() map[string]uint64 {
	if x != nil {
		return x.Versions
	}
	return nil
}

type MemberUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdateType MemberUpdateType `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3,enum=registryv2.MemberUpdateType" json:"update_type,omitempty"`
	Member     *Member          `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *MemberUpdate) Reset() {
	*x = MemberUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberUpdate) ProtoMessage() {}

func (x *MemberUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberUpdate.ProtoReflect.Descriptor instead.
func (*MemberUpdate) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{9}
}

func (x *MemberUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MemberUpdate) GetUpdateType() MemberUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return MemberUpdateType_REGISTER
}

func (x *MemberUpdate) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type HeartbeatRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *HeartbeatRequestV2) Reset() {
	*x = HeartbeatRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequestV2) ProtoMessage() {}

func (x *HeartbeatRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequestV2.ProtoReflect.Descriptor instead.
func (*HeartbeatRequestV2) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{10}
}

func (x *HeartbeatRequestV2) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type HeartbeatResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatResponseV2) Reset() {
	*x = HeartbeatResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponseV2) ProtoMessage() {}

func (x *HeartbeatResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponseV2.ProtoReflect.Descriptor instead.
func (*HeartbeatResponseV2) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{11}
}

type MembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MembersRequest) Reset() {
	*x = MembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembersRequest) ProtoMessage() {}

func (x *MembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembersRequest.ProtoReflect.Descriptor instead.
func (*MembersRequest) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{12}
}

type MembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*Member `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	Error   *ErrorV2  `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *MembersResponse) Reset() {
	*x = MembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MembersResponse) ProtoMessage() {}

func (x *MembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MembersResponse.ProtoReflect.Descriptor instead.
func (*MembersResponse) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{13}
}

func (x *MembersResponse) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *MembersResponse) GetError() *ErrorV2 {
	if x != nil {
		return x.Error
	}
	return nil
}

type MemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MemberRequest) Reset() {
	*x = MemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRequest) ProtoMessage() {}

func (x *MemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRequest.ProtoReflect.Descriptor instead.
func (*MemberRequest) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{14}
}

func (x *MemberRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member  `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Error  *ErrorV2 `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *MemberResponse) Reset() {
	*x = MemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registryv2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberResponse) ProtoMessage() {}

func (x *MemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registryv2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberResponse.ProtoReflect.Descriptor instead.
func (*MemberResponse) Descriptor() ([]byte, []int) {
	return file_registryv2_proto_rawDescGZIP(), []int{15}
}

func (x *MemberResponse) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberResponse) GetError() *ErrorV2 {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_registryv2_proto protoreflect.FileDescriptor

var file_registryv2_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x22, 0x5e,
	0x0a, 0x07, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x32, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe8,
	0x02, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x52,
	0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x29, 0x0a, 0x17, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a,
	0x18, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xbd, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x97, 0x01,
	0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76,
	0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x22, 0x10, 0x0a,
	0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x79, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x56, 0x32, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1f, 0x0a, 0x0d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x0e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x56, 0x32, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x2a, 0x6b, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04,
	0x2a, 0x20, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e,
	0x10, 0x01, 0x2a, 0x3b, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x32,
	0xd7, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x56, 0x32, 0x12, 0x59,
	0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x10, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e,
	0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x27, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76,
	0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4e, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1e, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x1f, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1a,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x2d, 0x69,
	0x6f, 0x2f, 0x66, 0x75, 0x64, 0x64, 0x6c, 0x65, 0x2d, 0x72, 0x70, 0x63, 0x3b, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registryv2_proto_rawDescOnce sync.Once
	file_registryv2_proto_rawDescData = file_registryv2_proto_rawDesc
)

func file_registryv2_proto_rawDescGZIP() []byte {
	file_registryv2_proto_rawDescOnce.Do(func() {
		file_registryv2_proto_rawDescData = protoimpl.X.CompressGZIP(file_registryv2_proto_rawDescData)
	})
	return file_registryv2_proto_rawDescData
}

var file_registryv2_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_registryv2_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_registryv2_proto_goTypes = []interface{}{
	(ErrorStatusV2)(0),                   // 0: registryv2.ErrorStatusV2
	(MemberStatus)(0),                    // 1: registryv2.MemberStatus
	(MemberUpdateType)(0),                // 2: registryv2.MemberUpdateType
	(*ErrorV2)(nil),                      // 3: registryv2.ErrorV2
	(*Member)(nil),                       // 4: registryv2.Member
	(*RegisterMemberRequest)(nil),        // 5: registryv2.RegisterMemberRequest
	(*RegisterMemberResponse)(nil),       // 6: registryv2.RegisterMemberResponse
	(*UnregisterMemberRequest)(nil),      // 7: registryv2.UnregisterMemberRequest
	(*UnregisterMemberResponse)(nil),     // 8: registryv2.UnregisterMemberResponse
	(*UpdateMemberMetadataRequest)(nil),  // 9: registryv2.UpdateMemberMetadataRequest
	(*UpdateMemberMetadataResponse)(nil), // 10: registryv2.UpdateMemberMetadataResponse
	(*SubscribeRequest)(nil),             // 11: registryv2.SubscribeRequest
	(*MemberUpdate)(nil),                 // 12: registryv2.MemberUpdate
	(*HeartbeatRequestV2)(nil),           // 13: registryv2.HeartbeatRequestV2
	(*HeartbeatResponseV2)(nil),          // 14: registryv2.HeartbeatResponseV2
	(*MembersRequest)(nil),               // 15: registryv2.MembersRequest
	(*MembersResponse)(nil),              // 16: registryv2.MembersResponse
	(*MemberRequest)(nil),                // 17: registryv2.MemberRequest
	(*MemberResponse)(nil),               // 18: registryv2.MemberResponse
	nil,                                  // 19: registryv2.Member.MetadataEntry
	nil,                                  // 20: registryv2.UpdateMemberMetadataRequest.MetadataEntry
	nil,                                  // 21: registryv2.SubscribeRequest.VersionsEntry
}
var file_registryv2_proto_depIdxs = []int32{
	0,  // 0: registryv2.ErrorV2.status:type_name -> registryv2.ErrorStatusV2
	1,  // 1: registryv2.Member.status:type_name -> registryv2.MemberStatus
	19, // 2: registryv2.Member.metadata:type_name -> registryv2.Member.MetadataEntry
	4,  // 3: registryv2.RegisterMemberRequest.member:type_name -> registryv2.Member
	3,  // 4: registryv2.RegisterMemberResponse.error:type_name -> registryv2.ErrorV2
	3,  // 5: registryv2.UnregisterMemberResponse.error:type_name -> registryv2.ErrorV2
	20, // 6: registryv2.UpdateMemberMetadataRequest.metadata:type_name -> registryv2.UpdateMemberMetadataRequest.MetadataEntry
	3,  // 7: registryv2.UpdateMemberMetadataResponse.error:type_name -> registryv2.ErrorV2
	21, // 8: registryv2.SubscribeRequest.versions:type_name -> registryv2.SubscribeRequest.VersionsEntry
	2,  // 9: registryv2.MemberUpdate.update_type:type_name -> registryv2.MemberUpdateType
	4,  // 10: registryv2.MemberUpdate.member:type_name -> registryv2.Member
	4,  // 11: registryv2.MembersResponse.members:type_name -> registryv2.Member
	3,  // 12: registryv2.MembersResponse.error:type_name -> registryv2.ErrorV2
	4,  // 13: registryv2.MemberResponse.member:type_name -> registryv2.Member
	3,  // 14: registryv2.MemberResponse.error:type_name -> registryv2.ErrorV2
	5,  // 15: registryv2.RegistryV2.RegisterMember:input_type -> registryv2.RegisterMemberRequest
	7,  // 16: registryv2.RegistryV2.UnregisterMember:input_type -> registryv2.UnregisterMemberRequest
	9,  // 17: registryv2.RegistryV2.UpdateMemberMetadata:input_type -> registryv2.UpdateMemberMetadataRequest
	11, // 18: registryv2.RegistryV2.Subscribe:input_type -> registryv2.SubscribeRequest
	13, // 19: registryv2.RegistryV2.Heartbeat:input_type -> registryv2.HeartbeatRequestV2
	17, // 20: registryv2.RegistryV2.Member:input_type -> registryv2.MemberRequest
	15, // 21: registryv2.RegistryV2.Members:input_type -> registryv2.MembersRequest
	6,  // 22: registryv2.RegistryV2.RegisterMember:output_type -> registryv2.RegisterMemberResponse
	8,  // 23: registryv2.RegistryV2.UnregisterMember:output_type -> registryv2.UnregisterMemberResponse
	10, // 24: registryv2.RegistryV2.UpdateMemberMetadata:output_type -> registryv2.UpdateMemberMetadataResponse
	12, // 25: registryv2.RegistryV2.Subscribe:output_type -> registryv2.MemberUpdate
	14, // 26: registryv2.RegistryV2.Heartbeat:output_type -> registryv2.HeartbeatResponseV2
	18, // 27: registryv2.RegistryV2.Member:output_type -> registryv2.MemberResponse
	16, // 28: registryv2.RegistryV2.Members:output_type -> registryv2.MembersResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_registryv2_proto_init() }
func file_registryv2_proto_init() {
	if File_registryv2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registryv2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMemberMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registryv2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_registryv2_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_registryv2_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_registryv2_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_registryv2_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_registryv2_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registryv2_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registryv2_proto_goTypes,
		DependencyIndexes: file_registryv2_proto_depIdxs,
		EnumInfos:         file_registryv2_proto_enumTypes,
		MessageInfos:      file_registryv2_proto_msgTypes,
	}.Build()
	File_registryv2_proto = out.File
	file_registryv2_proto_rawDesc = nil
	file_registryv2_proto_goTypes = nil
	file_registryv2_proto_depIdxs = nil
}
